//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2018.10.13 at 09:39:52 PM VET
//


package com.cloudator.restapp.forecastweather.service.dto;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.cloudator.restapp.forecastweather.model package.
 * <p>An ObjectFactory allows you to programmatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.cloudator.restapp.forecastweather.model
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link WeatherData }
     */
    public WeatherData createWeatherData() {
        return new WeatherData();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast }
     */
    public WeatherData.Forecast createWeatherdataForecast() {
        return new WeatherData.Forecast();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time }
     */
    public WeatherData.Forecast.Time createWeatherdataForecastTime() {
        return new WeatherData.Forecast.Time();
    }

    /**
     * Create an instance of {@link WeatherData.Location }
     */
    public WeatherData.Location createWeatherdataLocation() {
        return new WeatherData.Location();
    }

    /**
     * Create an instance of {@link WeatherData.Meta }
     */
    public WeatherData.Meta createWeatherdataMeta() {
        return new WeatherData.Meta();
    }

    /**
     * Create an instance of {@link WeatherData.Sun }
     */
    public WeatherData.Sun createWeatherdataSun() {
        return new WeatherData.Sun();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time.Symbol }
     */
    public WeatherData.Forecast.Time.Symbol createWeatherdataForecastTimeSymbol() {
        return new WeatherData.Forecast.Time.Symbol();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time.WindDirection }
     */
    public WeatherData.Forecast.Time.WindDirection createWeatherdataForecastTimeWindDirection() {
        return new WeatherData.Forecast.Time.WindDirection();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time.WindSpeed }
     */
    public WeatherData.Forecast.Time.WindSpeed createWeatherdataForecastTimeWindSpeed() {
        return new WeatherData.Forecast.Time.WindSpeed();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time.Temperature }
     */
    public WeatherData.Forecast.Time.Temperature createWeatherdataForecastTimeTemperature() {
        return new WeatherData.Forecast.Time.Temperature();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time.Pressure }
     */
    public WeatherData.Forecast.Time.Pressure createWeatherdataForecastTimePressure() {
        return new WeatherData.Forecast.Time.Pressure();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time.Humidity }
     */
    public WeatherData.Forecast.Time.Humidity createWeatherdataForecastTimeHumidity() {
        return new WeatherData.Forecast.Time.Humidity();
    }

    /**
     * Create an instance of {@link WeatherData.Forecast.Time.Clouds }
     */
    public WeatherData.Forecast.Time.Clouds createWeatherdataForecastTimeClouds() {
        return new WeatherData.Forecast.Time.Clouds();
    }

    /**
     * Create an instance of {@link WeatherData.Location.InnerLocation }
     */
    public WeatherData.Location.InnerLocation createWeatherdataLocationLocation() {
        return new WeatherData.Location.InnerLocation();
    }

}
